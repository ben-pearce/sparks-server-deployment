---
secrets:
  cloudflare_dns_api_token:
    file: ./.secrets/cloudflare_dns_api_token
  cloudflare_zone_api_token:
    file: ./.secrets/cloudflare_zone_api_token
  smtp_password:
    file: ./.secrets/smtp_password
services:
  traefik:
    command:
      - '--global.sendAnonymousUsage=false'
      - '--api.insecure=true'
      - '--api.dashboard=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.http.address=:80'
      - '--entrypoints.http.http.redirections.entrypoint.to=https'
      - '--entrypoints.http.http.redirections.entrypoint.scheme=https'
      - '--entrypoints.https.address=:443'
      - '--entrypoints.https.http.tls=true'
      - '--entrypoints.https.http.tls.certResolver=letsencrypt'
      - '--entrypoints.https.http.tls.domains[0].main=${HOST}'
      - '--entrypoints.https.http.tls.domains[0].sans=*.${HOST}'
      - '--certificatesresolvers.resolver.acme.dnschallenge=true'
      - '--certificatesresolvers.resolver.acme.dnschallenge.provider=cloudflare'
      - '--certificatesresolvers.resolver.acme.email=${ADMIN_MAIL}'
      - '--certificatesresolvers.resolver.acme.storage=/letsencrypt/acme.json'
      - '--certificatesresolvers.resolver.acme.dnschallenge.resolvers=1.1.1.1,1.0.0.1'
      - '--serversTransport.insecureSkipVerify=true'
    container_name: traefik
    environment:
      CF_ZONE_API_TOKEN_FILE: /run/secrets/cloudflare_zone_api_token
      CF_DNS_API_TOKEN_FILE: /run/secrets/cloudflare_dns_api_token
    hostname: traefik
    image: traefik:v2.10
    labels:
      traefik.enable: true
      traefik.http.routers.api.entrypoints: https
      traefik.http.routers.api.rule: Host(`${TRAEFIK_HOST}`)
      traefik.http.routers.api.tls.certresolver: resolver
      traefik.http.services.traefik.loadbalancer.server.port: 8080
      traefik.http.middlewares.authelia.forwardauth.address: https://${AUTHELIA_HOST}/api/verify?rd=https://${AUTHELIA_HOST}/
      traefik.http.middlewares.authelia.forwardauth.trustforwardheader: true
      traefik.http.middlewares.authelia.forwardauth.authresponseheaders: Remote-User, Remote-Groups, Remote-Email
    ports:
      - 443:443
      - 80:80
    restart: unless-stopped
    secrets:
      - cloudflare_dns_api_token
      - cloudflare_zone_api_token
    volumes:
      - ${DATA_DIR}/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
  code-server:
    image: lscr.io/linuxserver/code-server:latest
    container_name: code-server
    environment:
      - PUID
      - PGID
      - TZ
      - DEFAULT_WORKSPACE=/mnt/workspaces
      - DOCKER_MODS=linuxserver/mods:code-server-python3|linuxserver/mods:universal-docker-in-docker
    volumes:
      - ${CONFIG_DIR}/code:/config
      - ${HOME_DIR}/.gitconfig:/config/.gitconfig
      - ${HOME_DIR}/.gnupg:/config/.gnupg
      - ${HOME_DIR}/.ssh:/config/.ssh
      - /mnt/workspaces:/mnt/workspaces
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
    privileged: true
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      traefik.http.routers.code-server.entrypoints: https
      traefik.http.routers.code-server.rule: Host(`${CODE_HOST}`)
      traefik.http.routers.code-server.tls.certresolver: resolver
      traefik.http.services.code-server.loadbalancer.server.port: 8443
      traefik.http.routers.code-server.middlewares: authelia
  syncthing:
    container_name: syncthing
    environment:
      - PUID
      - PGID
      - TZ
    image: ghcr.io/linuxserver/syncthing
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      traefik.http.routers.syncthing.entrypoints: https
      traefik.http.routers.syncthing.rule: Host(`${SYNCTHING_HOST}`)
      traefik.http.routers.syncthing.tls.certresolver: resolver
      traefik.http.services.syncthing.loadbalancer.server.port: 8384
    ports:
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
    volumes:
      - ${DATA_DIR}/syncthing:/config
      - /home:/user
  watchtower:
    container_name: watchtower
    environment:
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 0 1 * *
      - WATCHTOWER_NOTIFICATIONS=email
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${SMTP_USER}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${ADMIN_MAIL}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${SMTP_HOST}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=587
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${SMTP_USER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=/run/secrets/smtp_password
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    secrets:
      - smtp_password
